{"version":3,"sources":["components/08-useReducer/todoReducer.js","components/08-useReducer/TodoApp.js","hooks/useForm.js","index.js"],"names":["todoReducer","state","action","type","payload","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","todos","dispatch","initialState","useState","values","setValues","target","name","value","useForm","description","handleInputChange","reset","useEffect","setItem","stringify","length","className","map","todo","i","desc","id","onSubmit","e","preventDefault","trim","newTodo","Date","getTime","done","placeholder","autoComplete","onChange","ReactDOM","render","document","getElementById"],"mappings":"gLACaA,EAAc,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAE/C,OAAOA,EAAOC,MAEV,IAAK,MACL,MAAM,GAAN,mBAAWF,GAAX,CAAkBC,EAAOE,UAEzB,QACA,OAAOH,I,6BCHTI,EAAO,WAET,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,IAS3CC,EAAU,WAAO,IAAD,EAEGC,qBAAWX,EAAa,GAAIK,GAF/B,mBAEjBO,EAFiB,KAEVC,EAFU,OCfN,WAAwB,IAAvBC,EAAsB,uDAAP,GAAO,EAEdC,mBAASD,GAFK,mBAEnCE,EAFmC,KAE3BC,EAF2B,KAgB1C,MAAO,CAAED,EARiB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OAEzBD,EAAU,2BACHD,GADE,kBAEJE,EAAOC,KAAOD,EAAOE,UARhB,WACVH,EAAWH,KDcuCO,CAAQ,CAC1DC,YAAa,KALQ,mBAIfA,EAJe,KAIfA,YAAeC,EAJA,KAImBC,EAJnB,KAQzBC,qBAAU,WAENjB,aAAakB,QAAQ,QAASpB,KAAKqB,UAAWf,MAE/C,CAACA,IAwBJ,OACI,gCACI,4CAAgBA,EAAMgB,OAAtB,QACA,uBAEA,sBAAKC,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SACI,oBAAIA,UAAU,8BAAd,SAEIjB,EAAMkB,KAAI,SAACC,EAAMC,GAAP,OACN,qBAAoBH,UAAU,kBAA9B,UACI,oBAAGA,UAAU,cAAb,UAA6BG,EAAI,EAAjC,KAAuCD,EAAKE,QAC5C,wBAAQJ,UAAU,iBAAlB,sBAFME,EAAKG,WAS3B,sBAAKL,UAAU,QAAf,UAEI,8CAEA,uBAED,uBAAMM,SA/CA,SAAAC,GAGjB,GAFAA,EAAEC,mBAEEf,EAAYgB,OAAOV,QAAU,GAAjC,CAGA,IAAMW,EAAU,CACZL,IAAI,IAAIM,MAAOC,UACfR,KAAMX,EACNoB,MAAM,GAQV7B,EALe,CACXV,KAAM,MACNC,QAASmC,IAKbf,MA4BW,UACK,uBACIrB,KAAK,OACLgB,KAAK,cACLU,UAAU,eACVc,YAAY,cACZC,aAAa,MACbC,SAAWtB,EACXH,MAAQE,IAGZ,wBACInB,KAAK,SACL0B,UAAU,yCAFd,kCE1ExBiB,IAASC,OAAO,cAAC,EAAD,IAAaC,SAASC,eAAe,W","file":"static/js/main.112b7037.chunk.js","sourcesContent":["\nexport const todoReducer = (state = [], action) => {\n    \n    switch(action.type)\n    {\n        case 'add': \n        return [...state, action.payload];\n        \n        default: \n        return state;\n    }\n};","import React, { useEffect, useReducer } from 'react';\nimport { todoReducer } from './todoReducer';\nimport { useForm } from '../../hooks/useForm';\n\nimport './styles.css';\n\nconst init = () => {\n\n    return JSON.parse(localStorage.getItem('todos')) || [];\n\n    // return [{\n    //     id: new Date().getTime(),\n    //     desc: 'Aprender React',\n    //     done: false\n    // }]; \n};\n\nexport const TodoApp = () => {\n\n    const [ todos, dispatch ] = useReducer(todoReducer, [], init);\n\n    const [ { description }, handleInputChange, reset ] = useForm({\n        description: ''\n    });\n\n    useEffect(() => {\n        \n        localStorage.setItem('todos', JSON.stringify( todos ));\n\n    }, [todos]);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        if (description.trim().length <= 1)\n        return;\n\n        const newTodo = {\n            id: new Date().getTime(),\n            desc: description,\n            done: false\n        };\n\n        const action = { \n            type: 'add',\n            payload: newTodo\n        };\n\n        dispatch( action );\n\n        reset();\n    };\n\n    return (\n        <div>\n            <h1>TodoApp ( { todos.length } )</h1>\n            <hr />\n\n            <div className=\"row\">\n                <div className=\"col-7\">\n                    <ul className=\"list-group list-group-flush\">\n                    {\n                        todos.map((todo, i) => (\n                            <li key={ todo.id } className=\"list-group-item\">\n                                <p className=\"text-center\">{ i + 1}. { todo.desc }</p>\n                                <button className=\"btn btn-danger\">Borrar</button>\n                            </li>\n                        ))\n                    }\n                    </ul>\n                </div>\n\n                <div className=\"col-5\">\n                    \n                    <h4>Agregar TODO</h4>\n\n                    <hr />\n\n                   <form onSubmit={ handleSubmit }>\n                        <input \n                            type=\"text\"\n                            name=\"description\" \n                            className=\"form-control\"\n                            placeholder=\"Aprender...\" \n                            autoComplete=\"off\"\n                            onChange={ handleInputChange }\n                            value={ description }\n                        />\n\n                        <button \n                            type=\"submit\"\n                            className=\"btn btn-outline-primary btn-block mt-1\">\n                            Agregar\n                        </button>\n\n                    </form> \n\n                </div>\n\n            </div>\n\n\n        </div>\n    );\n}","import { useState } from \"react\";\n\nexport const useForm = (initialState = {}) => {\n\n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    };\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [target.name]: target.value\n        });\n    }\n\n    return [ values, handleInputChange, reset ];\n}\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { TodoApp } from \"./components/08-useReducer/TodoApp\";\n// import { MemoHook } from \"./components/06-memos/MemoHook\";\n// import { FormWithCustomHook } from \"./components/02-useEffect/FormWithCustomHook\";\n// import { MultipleCustomHooks } from \"./components/03-examples/MultipleCustomHooks\";\n// import { FocusScreen } from \"./components/04-useRef/FocusScreen\";\n// import { RealExampleRef } from \"./components/04-useRef/RealExampleRef\";\n// import { Layout } from \"./components/05-useLayoutEffect/Layout\";\n// import { Memorize } from \"./components/06-memos/Memorize\";\n// import { CounterWithCustomHook } from \"./components/01-useState/CounterWithCustomHook\";\n// import SimpleForm from \"./components/02-useEffect/SimpleForm\";\n// import { CounterApp } from \"./components/01-useState/CounterApp\";\n// import { HookApp } from \"./HooksApp\";\n\nReactDOM.render(<TodoApp />, document.getElementById(\"root\"));\n\n// import './components/08-useReducer/intro-reducer';"],"sourceRoot":""}